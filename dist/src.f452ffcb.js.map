{"version":3,"sources":["index.js"],"names":["div1","document","querySelector","newDiv","dom","create","console","dir","append","insert_before","before","insert_after","after","d","wrap","remove_a","remove","div_empty","empty","attr","log","text","style","border","color","class","add","has","fn","on","off","bd","find","_find","find1","fd1Parent","parent","findChildren","children","fd2","find2Siblings","siblings","fd2NextNode","next","fd2PreviousNode","previous","each","item","nodeIndex","index"],"mappings":";AAAA,IAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAASC,IAAIC,OAAO,oBAC1BC,QAAQC,IAAIP,GACZI,IAAII,OAAOR,EAAMG,GACjB,IAAMM,EAAgBL,IAAIC,OAAO,+BACjCD,IAAIM,OAAOP,EAAQM,GACnB,IAAME,EAAeP,IAAIC,OAAO,+BAChCD,IAAIQ,MAAMH,EAAeE,GAGzB,IAAME,EAAIT,IAAIC,OAAO,gBACrBD,IAAIU,KAAKD,EAAGV,GAGZ,IAAIY,EAAWX,IAAIY,OAAOb,GACpBc,EAAYhB,SAASC,cAAc,UACrCgB,EAAQd,IAAIc,MAAMD,GAItBb,IAAIe,KAAKF,EAAW,QAAS,eAC7BX,QAAQc,IAAIH,GACZ,IAAIE,EAAOf,IAAIe,KAAKF,EAAW,SAC/BX,QAAQc,IAAID,GAGZf,IAAIiB,KAAKJ,EAAW,OACpBX,QAAQc,IAAIhB,IAAIiB,KAAKJ,IAErBb,IAAIkB,MAAML,EAAW,QAAS,OAC9Bb,IAAIkB,MAAML,EAAW,CAAEM,OAAQ,gBAAiBC,MAAO,UACvDlB,QAAQc,IAAIhB,IAAIkB,MAAML,EAAW,UAGjCb,IAAIqB,MAAMC,IAAIT,EAAW,KACzBb,IAAIqB,MAAMT,OAAOC,EAAW,KAC5BX,QAAQc,IAAIhB,IAAIqB,MAAME,IAAIV,EAAW,MAGrC,IAAIW,EAAK,WACRtB,QAAQc,IAAI,UAEbhB,IAAIyB,GAAGZ,EAAW,QAASW,GAC3BxB,IAAI0B,IAAIb,EAAW,QAASW,GAG5B,IAAIG,EAAK3B,IAAI4B,KAAK,QACdC,EAAQ7B,IAAI4B,KAAK,QAASD,EAAG,IACjCzB,QAAQc,IAAIa,GAGZ,IAAIC,EAAQ9B,IAAI4B,KAAK,OAAQC,EAAM,IAC/BE,EAAY/B,IAAIgC,OAAOF,EAAM,IACjC5B,QAAQc,IAAIe,GAGZ,IAAIE,EAAejC,IAAIkC,SAASL,EAAM,IACtC3B,QAAQc,IAAIiB,GAGZ,IAAIE,EAAMnC,IAAI4B,KAAK,QAAQ,GACvBQ,EAAgBpC,IAAIqC,SAASF,GACjCjC,QAAQc,IAAIoB,GAGZ,IAAIE,EAActC,IAAIuC,KAAKJ,GAC3BjC,QAAQc,IAAIsB,GAGZ,IAAIE,EAAkBxC,IAAIyC,SAASN,GACnCjC,QAAQc,IAAIwB,GAGZxC,IAAI0C,KAAKb,EAAM,GAAGK,SAAU,SAACS,GAC5BzC,QAAQc,IAAI2B,KAIb,IAAIC,EAAY5C,IAAI6C,MAAMV,GAC1BjC,QAAQc,IAAI4B","file":"src.f452ffcb.js","sourceRoot":"..\\src","sourcesContent":["const div1 = document.querySelector('#div1')\r\nconst newDiv = dom.create('<div>我是节点a</div>')\r\nconsole.dir(div1)\r\ndom.append(div1, newDiv)\r\nconst insert_before = dom.create('<div>我是节点b，在节点\"a\"前面插入</div>')\r\ndom.before(newDiv, insert_before)\r\nconst insert_after = dom.create('<div>我是节点c，在节点\"b\"后面插入</div>')\r\ndom.after(insert_before, insert_after)\r\n\r\n// 创建一个节点d，然后将d作为a的父节点\r\nconst d = dom.create('<div>d</div>')\r\ndom.wrap(d, newDiv)\r\n\r\n// 删除节点 a\r\nlet remove_a = dom.remove(newDiv)\r\nconst div_empty = document.querySelector('#empty')\r\nlet empty = dom.empty(div_empty)\r\n// console.log(empty)\r\n\r\n// 属性设置和获取属性\r\ndom.attr(div_empty, 'title', 'helloworld!')\r\nconsole.log(div_empty)\r\nlet attr = dom.attr(div_empty, 'title')\r\nconsole.log(attr)\r\n\r\n// 设置节点text内容\r\ndom.text(div_empty, '空节点')\r\nconsole.log(dom.text(div_empty))\r\n\r\ndom.style(div_empty, 'color', 'red')\r\ndom.style(div_empty, { border: '5px solid red', color: 'green' })\r\nconsole.log(dom.style(div_empty, 'color'))\r\n\r\n// 设置类样式\r\ndom.class.add(div_empty, 'a')\r\ndom.class.remove(div_empty, 'a')\r\nconsole.log(dom.class.has(div_empty, 'a'))\r\n\r\n// 设置和取消事件监听函数\r\nlet fn = () => {\r\n\tconsole.log('被点击了！')\r\n}\r\ndom.on(div_empty, 'click', fn)\r\ndom.off(div_empty, 'click', fn)\r\n\r\n// 查找元素\r\nlet bd = dom.find('body')\r\nlet _find = dom.find('#find', bd[0])\r\nconsole.log(_find)\r\n\r\n// 找父亲节点\r\nlet find1 = dom.find('.fd1', _find[0])\r\nlet fd1Parent = dom.parent(find1[0])\r\nconsole.log(fd1Parent)\r\n\r\n// 找子元素\r\nlet findChildren = dom.children(_find[0])\r\nconsole.log(findChildren)\r\n\r\n// 找所有兄弟节点\r\nlet fd2 = dom.find('.fd2')[0]\r\nlet find2Siblings = dom.siblings(fd2)\r\nconsole.log(find2Siblings)\r\n\r\n// 找到下一个节点\r\nlet fd2NextNode = dom.next(fd2)\r\nconsole.log(fd2NextNode)\r\n\r\n// 找到上一个节点\r\nlet fd2PreviousNode = dom.previous(fd2)\r\nconsole.log(fd2PreviousNode)\r\n\r\n// 遍历这个节点下的元素\r\ndom.each(_find[0].children, (item) => {\r\n\tconsole.log(item)\r\n})\r\n\r\n// 获取节点的下标\r\nlet nodeIndex = dom.index(fd2)\r\nconsole.log(nodeIndex)\r\n"]}